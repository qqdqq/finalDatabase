@page
@model ThemeParkDatabase.Pages.Vendors.IndexModel

@{
    ViewData["Title"] = "Vendors";
}

<div class="row">
    <div class="col-xs-12">
    <!-- BAR CHART -->
    <div class="box box-success">
        <div class="box-header with-border">
        <h3 class="box-title">Vendor Sales</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
        </div>
        <div class="box-body">
        <div class="chart">
            <canvas id="barChart" style="height:230px"></canvas>
        </div>
        </div>
        <!-- /.box-body -->
    </div>
    <!-- /.box -->

    </div>
    <!-- /.col (RIGHT) -->
</div>
<!-- /.row -->

<div class="row">
  <div class="col-xs-12">
    <div class="box">
      <div class="box-header">
        <h2 class="box-title">Vendors<h4><a asp-page="Create">Create New</a></h4></h2>
      </div>
      <!-- /.box-header -->
      <div class="box-body">
        <table class="table table-bordered table-hover" id="vendor-table">
            <thead>
                <tr>
                  <th>ID</th>
                  <th>Vendor</th>
                  <th>Description</th>
                  <th>Location</th>
                  <th>Vendor Type</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Vendor) {
              <tr name="vendor" data-id="@item.Id">
                    <td><a asp-page="./Details"
                        asp-route-id="@item.Id">@Html.DisplayFor(v => item.Id)</a></td>
                    <td>@Html.DisplayFor(v => item.Name)</td>
                    <td>@Html.DisplayFor(v => item.Description)</td>
                    <td>@Html.DisplayFor(v => item.Location.Name)</td>
                    <td>@Html.DisplayFor(v => item.VendorType.Name)</td>
                </tr>
            }
            </tbody>
        </table>
      </div>
      <!-- /.box-body -->
    </div>
    <!-- /.box -->
  </div>
  <!-- /.col -->
</div>
<!-- /.row -->

@section scripts {
<script>
  var chartData = {
    labels: [],
      datasets: [
        {
          label               : "Vendor Sales",
          fillColor           : 'rgba(210, 214, 222, 1)',
          strokeColor         : 'rgba(210, 214, 222, 1)',
          pointColor          : 'rgba(210, 214, 222, 1)',
          pointStrokeColor    : '#c1c7d1',
          pointHighlightFill  : '#fff',
          pointHighlightStroke: 'rgba(220,220,220,1)',
          data                : []
        }
      ]
  }
  function respondCanvas() {
      var barChartCanvas = $('#barChart').get(0).getContext('2d')
      var barChart = new Chart(barChartCanvas)
      var barChartOptions = {
        //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
        scaleBeginAtZero        : true,
        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines      : true,
        //String - Colour of the grid lines
        scaleGridLineColor      : 'rgba(0,0,0,.05)',
        //Number - Width of the grid lines
        scaleGridLineWidth      : 1,
        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,
        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines  : true,
        //Boolean - If there is a stroke on each bar
        barShowStroke           : true,
        //Number - Pixel width of the bar stroke
        barStrokeWidth          : 2,
        //Number - Spacing between each of the X value sets
        barValueSpacing         : 5,
        //Number - Spacing between data sets within X values
        barDatasetSpacing       : 1,
        //String - A legend template
        legendTemplate          : '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label%><%}%></li><%}%></ul>',
        //Boolean - whether to make the chart responsive
        responsive              : true,
        maintainAspectRatio     : true
      }
      barChartOptions.datasetFill = true
      barChart.Bar(chartData, barChartOptions)
  }

  var GetChartData = function () {
      $.ajax({
          url: "/Maintenance?handler=MaintenanceCount",
          method: 'GET',
          dataType: 'json',
          success: function (d) {
            var labels = []
            var data = []
            $.each(d, function (index, value) {
              labels.push(value.attraction_id);
              data.push(value.maintenance_request_count);
            });
            $.each(labels, function (index, value) {
              console.log(value);
              console.log(data[index]);
            });
            chartData = {
            labels: labels,
              datasets: [
                {
                  label               : "Vendor Sales",
                  fillColor           : "rgba(210, 214, 222, 1)",
                  strokeColor         : "gba(210, 214, 222, 1)",
                  pointColor          : "rgba(210, 214, 222, 1)",
                  pointStrokeColor    : "#c1c7d1",
                  pointHighlightFill  : "#fff",
                  pointHighlightStroke: "rgba(220,220,220,1)",
                  data                : data
                }
              ]
            }
            respondCanvas();
          }
      });
  };
  $(document).ready(function() {
      respondCanvas();
      GetChartData();
  });
  $("#vendor-table").DataTable();
</script>
}
