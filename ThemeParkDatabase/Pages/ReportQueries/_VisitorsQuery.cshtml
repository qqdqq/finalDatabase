@model ThemeParkDatabase.ViewModels.VisitorsQuery
@using ThemeParkDatabase.Models;



@{
    List<DailyParkReport> parkReports = Model.DailyParkReports
        .Where(p => (p.Date >= Model.ReportQuery.StartDate) && (p.Date <= Model.ReportQuery.EndDate))
        .ToList();

    int totalVisits = 0;
    foreach (var parkReport in parkReports)
    {
        totalVisits += parkReport.NumVisitors;
    }
    <p>Total Visits: @totalVisits</p>
    var avgVisits = totalVisits / parkReports.Count();
    <p>Average Visits: @avgVisits</p>

    var highest = 0;

    @*var highest = 0;
    var highestDate = new DateTime();
    var lowest = 9999999; // yea yea yea
    var lowestDate = new DateTime();
    for (DateTime iter = firstDate; iter.Date <= lastDate.Date; iter = iter.AddDays(1))
    {
        var visitCount = visits.Where(v => (v.Time >= iter) && (v.Time < iter.AddDays(1))).Count();

        if (visitCount > highest)
        {
            highestDate = iter;
            highest = visitCount;
        }
        if (visitCount < lowest)
        {
            lowestDate = iter;
            lowest = visitCount;
        }
    }
    <p>Highest count: @highest on @highestDate.ToString("MM/dd/yyyy") </p> // Can't get format right
    <p>Lowest count: @lowest on @lowestDate.ToString()</p>*@
}